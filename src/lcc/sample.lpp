/* Define template organism */
//organism ecoli "E-coli K-12 MG1655";

/* Define experiment environment */
/* TODO */
experiment my_expr {
	description "TCA Cycle";
	property temperature 37.0;
	property medium LB;
};

using module Transcription;
//using module Replication;

/* Define proteins */
// FIXME:
protein GltA(oxaloacetate + acetyl-CoA --> citrate); // GltA
protein AcnA(citrate --> isocitrate);
protein AcnB(citrate --> isocitrate);
protein Icd(isocitrate --> keto-glutarate);
//protein AceK(Icd <--> Icd@phosphate);
//protein SucA, SucB, SucD, SucC;
protein SucA();
protein SucB();
protein Fume();
protein Mdh(malate --> oxaloacetate);
protein_complex Sdh = SdhA + SdhB + SdhC + SdhD + SdhE;
/*
protein CA2(CO2 + H2O --> H+ + OHCOO-) {
	cofactor co1(Zn2+);
	domain dom1(co1-his, co1-his, co1-his);
	step step1(dom1 + H2O --> dom1-OH- + H+);
	step step2(dom1-OH- + CO2 --> dom1-OHCOO-);
	step step3(dom1-OHCOO- --> dom1 + OHCOO-);
	sequence steps(step1, step2, step3);
	PDB "xxxx";
};
*/

// TCA
pathway OLD_TCA = GltA --> AcnA | AcnB --> Icd --> SucA + SucB --> SucD + SucC --> Sdh --> Fume <--> Mdh --> GltA;

// New pathway format

pathway TCA {
	description "TCA";
	reaction_id r101013;
	reaction GltA --> AcnA | AcnB --> Icd --> SucA + SucB --> SucD + SucC --> Sdh --> Fume --> Mdh --> GltA;
	// reaction CA2.dom1 + CA2.dom2;
	// property XXX YYY;
};

protein p1(S + E --> P + E, cp, kcat=10, KM=0.001);
//protein p1(S + E --> P + E, cp);

protein p3(S + E --> P + E) {
    reaction r1(S + E --> C, k=1, krev=0.1);
    reaction r2(C --> P + E, k=5, krev=0.0001);
    reaction r3(I + E --> CI, k=0.5, krev=0.001);
};

if (a) {
    protein IFProtein();
}

if (b) {
    protein IFProtein2();
} else {
    protein ElseProtein();
}

while (c) {
    protein WhileProtein();
}

for (a[0]=10; a[0] != 100; a[0] = a[1] + 1) {
    protein MyEnz();
}

a = 10.0;
b[10] = 11;
c[::-1] = 12;
d[1:3] = 14;
e[0] = 10e23;
e[1] = +10.0;
e[2] = -11.0;
e[3] = -1.23e99;
e[4] = +9.999999999999e-99999;

int a;
float b;
array c;
int d, e, f, g;

int a = 10;
array f = [1, 2, 3];
array g = [10, a];
array h = [1];
array i = [1, [2, 3]];

func(b);
func();
func(1, 2, 3);

for (i = 0; i < len(f); i= i + 1) {
    func(i);
}
